Angular
------

create project : ng new projectName 

				or

			ng new projectname --routing

project running : -ng serve --open

clear errors/warnings : -npm i --force

create a component : ng g c 'componentname'





folders
-------
.angular : config btwn angular app & CLI
.vscode : config btwn angular and vscode
node_modles : to store copies of external/3rd party libraries we install
assets : to store media files for your project




files
-----
.editorconfig : contains editors configurations.
.gitignore : contains files that are ignored while pushing into git.
angular.json : 




life-cycle of angular componenet
--------------------------------

constructor --> ngOnInit --> other methods





Data Binding Techniques in Angular(data sharing in components)
---------------------------------

html - view
ts - component

1. One Way Binding
------------------

	1.1 Component t0 view data sharing
		
		1.1.1 String Interpolation {{}}
		1.1.2 Property Binding []


	1.2 View to component data sharing

		1.2.1 event binding  (event)="method()"
		1.2.2 event binding using $ event  (event)=method($event)
		1.2.3 event binding with template rendering variable    #variable


2. Two Way Binding
------------------

	2.1 ngModel   [(ngModel)]="property"   FormsModule





Redirection In Angular
----------------------

Module  - AppRoutingModule.
Router  - A class used to redirect.
Methods - navigateByUrl


Dependency Injection
--------------------

To share datas between two classes

Inside the constructor

	access_specifier reference:className
	private/public


	reference.method()


Angular Services
----------------

to store datas and methods 
- all the components can access the datas and methods defined in service file easily

		
		-ng g s service_name


Angular Directives 
-----------------

to manipulate DOM

1.Component directives
2.Structural directives   *ngFor *ngIf
3.Atribute directives     [ngClass]



Validation In Angular
---------------------

for creationin angular

	1.Template driven form
	2.Model driven form

		2.1.Reactive form  - used to create model of form
		  
		  reactive form contains:
			
			*group
			*control
			*array
			
			-reactiveFormsModule 
			-FormBuilder
			-group() 


Local Storage in Angular
------------------------

localStorage.getItem()
localStorage.setItem()
localStorage.removeItem()


json - stringify    parse


Parent-Child Communication
--------------------------

@input() decorator is used to share data from parent to child.

@output()                  " "                child to parent.



Event Creation in Angular
-------------------------

we can create our own events in angular projects.

EventEmitter   - class used to create userdefined events.

			eventname=new EventEmitter()

			emit() - to define the working time/to start the event

Date and Time in angular
------------------------

class- Date

Angular Pipes
-------------
to convert datas into another format

	pipe creation
	-------------
		ng g pipe "pipename"


API Creation in Angular
-----------------------

HttpClientModule - module to create web API calls

HttpClient       - class inside the HttpClientModule

folder   file    class  methods

package  module  class  methods


Asynchronous code handling in ts
--------------------------------

js - promise - resolve then()
			 - reject  catch()

ts - observe - resolve subscribe()
			 - reject  catch()


Header generation for API request.
---------------------------------

HttpHeaders - class used to generate header





http server for hosting
-----------------------

to install
----------
npm install -g http-server 

to run
------
http server   



Lazy Loading
------------
provides less loading time for high traffic pages

ng g module 'modulename' --route 'modulename' --module app.module

normal Module creation 
----------------------
ng g m 'modulename'


json server
-----------
1.install server : npm i --save json-server
2.run server in server file location : npx json-server --watch db.json --port 3000


Behaviour subject
-----------------
to share data between modules.
rxjs(Reactive Extension for Java Script) library of Behaviour subject.
rxjs is used to handle async implementation in angular.

Activated Route in Angular
-------------------------

used to access data from urls (access params)

class - ActivatedRoute
method - params()  (it is an Asynchronous method)